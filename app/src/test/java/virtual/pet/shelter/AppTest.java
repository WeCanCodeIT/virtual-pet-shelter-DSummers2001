/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package virtual.pet.shelter;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test
    void testPetName() {
        Pets wolf = new Pets("Wolfy", "Sleek white fur with beautiful blue eyes");
        assertEquals("Wolfy", wolf.getName());
    }

    @Test
    void testPetDescription() {
        Pets wolf = new Pets("Wolfy", "Sleek white fur with beautiful blue eyes");
        assertEquals("Sleek white fur with beautiful blue eyes", wolf.getDescription());
    }

    @Test
    void testPetThirst() {
        Pets Hunter = new Pets("Dobby", "Jet black fur with beady brown eyes");
        assertEquals(100, Hunter.getThirst());
    }

    @Test
    void testPetHunger() {
        Pets Bull = new Pets("Bully", "Muscular bull dog with a beige coat");
        assertEquals(100, Bull.getHunger());
    }

    @Test
    void testPetBoredom() {
        Pets rex = new Pets("Rexy", "Cute dalmatian with brown eyes");
        assertEquals(100, rex.getBoredom());
    }

    @Test
    void testPetHealthTick() {
        Pets pet = new Pets("Wolfy", "He's a wolf");
        pet.tick();
        assertEquals(45, pet.getHunger());
        assertEquals(45, pet.getThirst());
    }

    @Test
    void testIntakePet() {
        Shelter shelter = new Shelter();
        shelter.intakePet(12, "Wolfy", "A white cat");
        assertNotNull(shelter);
    }

    @Test
    void testAdoption() {
        Shelter shelter = new Shelter();
        shelter.intakePet(11, "Greg", "Badger");
        shelter.petAdoption(11);
        assertEquals(null, shelter.selectedPet(11));
    }

    @Test
    void testFeedPets() {
        Shelter shelter = new Shelter();
        shelter.intakePet(12, "Billy", "Goat");
        shelter.feedPets();

        assertEquals(60, shelter.selectedPet(12).getHunger());
    }

    @Test
    void testWaterPets() {
        Shelter shelter = new Shelter();
        shelter.intakePet(12, "Billy", "Goat");
        shelter.waterPets();

        assertEquals(60, shelter.selectedPet(12).getThirst());
    }

    @Test
    void testPlayPet() {
        Shelter shelter = new Shelter();
        shelter.intakePet(45, "Guss", "Grizly");
        shelter.selectedPet(45).changeBoredom(+10);

        assertEquals(60, shelter.selectedPet(45).getBoredom());
    }

}
